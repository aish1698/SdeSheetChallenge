public class Solution
{
    private static int helper(int denominations[],int amount,int n,int dp[][]){
        if(amount==0)
            return 0;
        if(n==0)
            return Integer.MAX_VALUE-1;
       if(dp[n][amount]!=-1)
           return dp[n][amount];
        
        if(denominations[n-1]>amount)
            return helper(denominations,amount,n-1,dp);
        int take=1+helper(denominations,amount-denominations[n-1],n,dp);
        int nottake=helper(denominations,amount,n-1,dp);
       return dp[n][amount]=Math.min(take,nottake);

    }
public static int findMinimumCoins(int amount)
    {
        // Write your code here.
    int denominations[]=new int[]{1, 2, 5, 10, 20, 50, 100, 500, 1000};
    int n=denominations.length;
    int dp[][]=new int[n+1][amount+1];
    for(int i=0;i<=n;i++){
        for(int j=0;j<=amount;j++){
            dp[i][j]=-1;
        }
    }
    return helper(denominations,amount,n,dp);
    }
}
