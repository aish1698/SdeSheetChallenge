
import java.util.*;
class GFG{


static void SubarrayWithMaxSum(Vector<Integer> nums)
{
	
	int sum=0;
  int startIndex=-1,endIndex=-1;
  int start=-1;
  
  int maxi=Integer.MIN_VALUE;
  

	
	for (int i = 0; i < nums.size(); i++)
	{

	if(sum==0)
    {
      start=i;
    }
      sum+=nums.get(i);
      if(sum>maxi)
      {
        maxi=sum;
        startIndex=start;
        endIndex=i;
      }
      if(sum<0)
      {
        sum=0;
      }
    }
	
	
	for(int i = startIndex; i <= endIndex; i++)
	{
	System.out.print(nums.get(i) + " ");
	}
}


public static void main(String[] args)
{
	
	Vector<Integer> arr = new Vector<Integer>();
	arr.add(-2);
	arr.add(-5);
	arr.add(6);
	arr.add(-2);
	arr.add(-3);
	arr.add(1);
	arr.add(5);
	arr.add(-6);

	
	SubarrayWithMaxSum(arr);
}
}


