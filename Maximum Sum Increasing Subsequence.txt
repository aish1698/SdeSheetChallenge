import java.util.*;

public class Solution {
    private static int helper(ArrayList<Integer> arr,int ind,int prev,int dp[][]){
        int sum=0;
        if(ind==arr.size())
            return 0;
        if(dp[ind][prev+1]!=-1)
            return dp[ind][prev+1];
        
        sum=0+helper(arr,ind+1,prev,dp);
        if(prev==-1||arr.get(ind)>arr.get(prev))
        {
            sum=Math.max(sum,arr.get(ind)+helper(arr,ind+1,ind,dp));
        }
        return dp[ind][prev+1]=sum;
        
    }
    public static int maxIncreasingDumbbellsSum(ArrayList<Integer> rack, int n) {
        // Write your code here.
        if(rack==null||rack.size()==0)
            return 0;
        int dp[][]=new int[rack.size()][rack.size()+1];
        for(int i=0;i<rack.size();i++){
            
            for(int j=0;j<rack.size()+1;j++){
              dp[i][j]=-1;  
            }
        }
      
        return helper(rack,0,-1,dp);
        
    }
}
