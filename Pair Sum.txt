import java.util.*;
public class Solution{
    public static int[][] pairSum(int[] arr, int s) {
        // Write your code here.
      ArrayList<int[]> ans=new ArrayList<>();
        
        
    int n=arr.length;
        HashMap<Integer,Integer> h=new HashMap<>();
      int i=0;
        
        while(i<n)
        {
            int subs=s-arr[i];
            if(h.containsKey(subs))
            {
              int count=h.getOrDefault(subs,0);
              int pair[]=new int[2];
                pair[0]=arr[i];
                pair[1]=subs;
                while(count-->0)
                {
                    ans.add(pair);
                }
                
            }
            h.put(arr[i],h.getOrDefault(arr[i],0)+1);
            i++;
        }
        int res[][]=new int[ans.size()][2];
        for(int j=0;j<ans.size();j++){
            int a=ans.get(j)[0],b=ans.get(j)[1];
            res[j][0]=Math.min(a,b);
            res[j][1]=Math.max(a,b);
            
        }
        Arrays.sort(res,new Comparator<int[]>(){
            public int compare(int a[],int b[]){
                if(a[0]==b[0])
                {
                    return a[1]-b[1];
                }
                return a[0]-b[0];
            }
        });
        return res;
        
    }
}