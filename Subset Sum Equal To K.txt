import java.util.*;

public class Solution {
//     private static boolean helper(int n,int arr[],int k){
//         if(k==0)
//             return true;
//         else if(k>0&&n==0)
//             return false;
//         
//            
//         if(arr[n-1]>k)
//             return helper(n-1,arr,k);
//         return helper(n-1,arr,k-arr[n-1])||helper(n-1,arr,k);
            
        
//     }
    public static boolean subsetSumToK(int n, int k, int arr[]){
        // Write your code here.
     boolean dp[][]=new boolean[n+1][k+1];
        for(int i=0;i<=n;i++){
            dp[i][0]=true;
        }
        for(int j=1;j<=k;j++){
                dp[0][j]=false;
                
            }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=k;j++){
                if(arr[i-1]>j)
                {
                    dp[i][j]=dp[i-1][j];
                }
                else{
                    dp[i][j]=dp[i-1][j-arr[i-1]]||dp[i-1][j];
                }
                
            }
            
        }
        return dp[n][k];
        
    }
}
