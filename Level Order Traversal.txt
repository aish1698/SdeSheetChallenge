/*

	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T val;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

*/

import java.util.*;

public class Solution {

  public static ArrayList<Integer> getLevelOrder(BinaryTreeNode root) {
    //Your code goes here
      if(root==null)
          return new ArrayList();
      ArrayList<Integer> arr=new ArrayList<>();
      Queue<BinaryTreeNode> q=new LinkedList<>();
      q.offer(root);
      while(!q.isEmpty()){
          int size=q.size();
          for(int i=0;i<size;i++){
              BinaryTreeNode temp=q.poll();
              arr.add(temp.val);
              if(temp.left!=null)
                  q.offer(temp.left);
              if(temp.right!=null)
                  q.offer(temp.right);
              
          }
          
      }
      return arr;
  }

}