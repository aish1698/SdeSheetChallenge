/*
    Following is the Binary Tree node structure:

	class BinaryTreeNode<T> {
	    public T data;
	    public BinaryTreeNode<T> left;
	    public BinaryTreeNode<T> right;

	    BinaryTreeNode(T data) {
	        this.data = data;
	        this.left = null;
	        this.right = null;
	    }
	}
*/
import java.util.*;
public class Solution {
    private static boolean helper(BinaryTreeNode<Integer> root,int x){
        if(root==null)
            return false;
        if(root.data==x)
            return true;
        else if(x<root.data)
        {
           return helper(root.left,x);
        }
        else if(x>root.data)
        {
            return helper(root.right,x);
        }
        return false;
        
    }
	public static Boolean searchInBST(BinaryTreeNode<Integer> root, int x) {
		// Write your code here.
        return helper(root,x);
	}
}