/*************************************************************
    Following is the Binary Search Tree node structure

	class TreeNode<T> {
	    public T data;
	    public TreeNode<T> left;
	    public TreeNode<T> right;

	    TreeNode(T data) {
	        this.data = data;
	        left = null;
	        right = null;
	    }
	}

*************************************************************/



import java.util.*;

public class Solution {
   
    private static void inorder(TreeNode<Integer> root, ArrayList<Integer> nodes) 
    {
        if (root == null) 
        {
       
            return;
        }

      
        inorder(root.left, nodes);

    
        nodes.add(root.data);
         
     
        inorder(root.right, nodes);
    }
	public static int KthLargestNumber(TreeNode<Integer> root, int k) {
		// Write your code here.
        ArrayList<Integer> nodes = new ArrayList<Integer>();
         inorder(root, nodes);
        int n=nodes.size();
        if(k>n)
            return -1;
return nodes.get(n-k);
	}
}