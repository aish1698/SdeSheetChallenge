import java.util.*;
public class Solution {
	
	public static int[] nextGreater(int[] arr, int n) {	
		//Write Your code here
        
         
        Stack<Integer> st=new Stack<>();
      int k=0;
     int right[]=new int[n];
      for(int i=n-1;i>=0;i--){
          if(st.isEmpty())
          {
              right[k++]=-1;
          }
          else if(!st.isEmpty()&&st.peek()>arr[i])
          {
             right[k++]=st.peek();   
          }
          else if(!st.isEmpty()&&st.peek()<=arr[i]){
              while(!st.isEmpty()&&st.peek()<=arr[i]){
                  st.pop();
                  
              }
              if(st.isEmpty())
              {
                  right[k++]=-1;
              }
              else{
                  right[k++]=st.peek();
              }
              
          }
          st.push(arr[i]);
      }
       int x=0;
        int res[]=new int[n];
        for(int i=n-1;i>=0;i--){
            res[x++]=right[i];
            
        }
        return res;
    }
		
	}


