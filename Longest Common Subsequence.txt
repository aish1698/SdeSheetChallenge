import java.util.*;
public class Solution {
private static int helper(int m,String s,int n,String t,int dp[][]){
    if(m<0||n<0)
        return 0;
    if(dp[m][n]!=-1)
        return dp[m][n];
    if(s.charAt(m)==t.charAt(n))
    {
        return dp[m][n]=1+helper(m-1,s,n-1,t,dp);
    }
   return dp[m][n]=Math.max(helper(m,s,n-1,t,dp),helper(m-1,s,n,t,dp));
    
    
}
	public static int lcs(String s, String t) {
		//Your code goes here
        int m=s.length();
        int n=t.length();
        int dp[][]=new int[m+1][n+1];
        for(int i=0;i<=m;i++){
            for(int j=0;j<=n;j++){
                dp[i][j]=-1;
                
            }
        }
        return helper(m-1,s,n-1,t,dp);
    }

}